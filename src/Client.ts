/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { BaseDocument } from "./api/resources/baseDocument/client/Client";
import { BaseMemory } from "./api/resources/baseMemory/client/Client";
import { BaseMessages } from "./api/resources/baseMessages/client/Client";
import { BaseUser } from "./api/resources/baseUser/client/Client";

export declare namespace ZepClient {
    interface Options {
        environment?: core.Supplier<environments.ZepEnvironment | string>;
        apiKey?: core.Supplier<string | undefined>;
        fetcher?: core.FetchFunction;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}

export class ZepClient {
    constructor(protected readonly _options: ZepClient.Options = {}) {}

    protected _baseDocument: BaseDocument | undefined;

    public get baseDocument(): BaseDocument {
        return (this._baseDocument ??= new BaseDocument(this._options));
    }

    protected _baseMemory: BaseMemory | undefined;

    public get baseMemory(): BaseMemory {
        return (this._baseMemory ??= new BaseMemory(this._options));
    }

    protected _baseMessages: BaseMessages | undefined;

    public get baseMessages(): BaseMessages {
        return (this._baseMessages ??= new BaseMessages(this._options));
    }

    protected _baseUser: BaseUser | undefined;

    public get baseUser(): BaseUser {
        return (this._baseUser ??= new BaseUser(this._options));
    }
}
