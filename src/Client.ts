/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "./environments";
import * as core from "./core";
import { Document } from "./api/resources/document/client/Client";
import { Collection } from "./api/resources/collection/client/Client";
import { Session } from "./api/resources/session/client/Client";
import { Memory } from "./api/resources/memory/client/Client";
import { Messages } from "./api/resources/messages/client/Client";
import { Search } from "./api/resources/search/client/Client";
import { User } from "./api/resources/user/client/Client";

export declare namespace ZepClient {
    interface Options {
        environment?: core.Supplier<environments.ZepEnvironment | string>;
        apiKey?: core.Supplier<string | undefined>;
        fetcher?: core.FetchFunction;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}

export class ZepClient {
    constructor(protected readonly _options: ZepClient.Options = {}) {}

    protected _document: Document | undefined;

    public get document(): Document {
        return (this._document ??= new Document(this._options));
    }

    protected _collection: Collection | undefined;

    public get collection(): Collection {
        return (this._collection ??= new Collection(this._options));
    }

    protected _session: Session | undefined;

    public get session(): Session {
        return (this._session ??= new Session(this._options));
    }

    protected _memory: Memory | undefined;

    public get memory(): Memory {
        return (this._memory ??= new Memory(this._options));
    }

    protected _messages: Messages | undefined;

    public get messages(): Messages {
        return (this._messages ??= new Messages(this._options));
    }

    protected _search: Search | undefined;

    public get search(): Search {
        return (this._search ??= new Search(this._options));
    }

    protected _user: User | undefined;

    public get user(): User {
        return (this._user ??= new User(this._options));
    }
}
