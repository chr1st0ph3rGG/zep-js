/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as Zep from "../../../../../api";
import * as core from "../../../../../core";

export const ModelsClassifySessionRequest: core.serialization.Schema<
    serializers.ModelsClassifySessionRequest.Raw,
    Zep.ModelsClassifySessionRequest
> = core.serialization.object({
    classes: core.serialization.list(core.serialization.string()),
    instruction: core.serialization.string().optional(),
    lastN: core.serialization.property("last_n", core.serialization.number().optional()),
    name: core.serialization.string(),
    persist: core.serialization.boolean().optional(),
});

export declare namespace ModelsClassifySessionRequest {
    interface Raw {
        classes: string[];
        instruction?: string | null;
        last_n?: number | null;
        name: string;
        persist?: boolean | null;
    }
}
