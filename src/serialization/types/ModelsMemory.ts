/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Zep from "../../api";
import * as core from "../../core";
import { ModelsMessage } from "./ModelsMessage";
import { ModelsSummary } from "./ModelsSummary";

export const ModelsMemory: core.serialization.ObjectSchema<serializers.ModelsMemory.Raw, Zep.ModelsMemory> =
    core.serialization.object({
        facts: core.serialization.list(core.serialization.string()).optional(),
        messages: core.serialization.list(ModelsMessage).optional(),
        metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        summary: ModelsSummary.optional(),
    });

export declare namespace ModelsMemory {
    interface Raw {
        facts?: string[] | null;
        messages?: ModelsMessage.Raw[] | null;
        metadata?: Record<string, unknown> | null;
        summary?: ModelsSummary.Raw | null;
    }
}
