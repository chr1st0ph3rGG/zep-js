/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Zep from "../../api";
import * as core from "../../core";
import { ModelsMessage } from "./ModelsMessage";
import { ModelsSummary } from "./ModelsSummary";

export const ModelsMemorySearchResult: core.serialization.ObjectSchema<
    serializers.ModelsMemorySearchResult.Raw,
    Zep.ModelsMemorySearchResult
> = core.serialization.object({
    embedding: core.serialization.list(core.serialization.number()).optional(),
    message: ModelsMessage.optional(),
    metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    score: core.serialization.number().optional(),
    summary: ModelsSummary.optional(),
});

export declare namespace ModelsMemorySearchResult {
    interface Raw {
        embedding?: number[] | null;
        message?: ModelsMessage.Raw | null;
        metadata?: Record<string, unknown> | null;
        score?: number | null;
        summary?: ModelsSummary.Raw | null;
    }
}
