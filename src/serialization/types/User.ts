/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Zep from "../../api/index";
import * as core from "../../core";

export const User: core.serialization.ObjectSchema<serializers.User.Raw, Zep.User> = core.serialization.object({
    createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
    deletedAt: core.serialization.property("deleted_at", core.serialization.string().optional()),
    email: core.serialization.string().optional(),
    firstName: core.serialization.property("first_name", core.serialization.string().optional()),
    id: core.serialization.number().optional(),
    lastName: core.serialization.property("last_name", core.serialization.string().optional()),
    metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    projectUuid: core.serialization.property("project_uuid", core.serialization.string().optional()),
    sessionCount: core.serialization.property("session_count", core.serialization.number().optional()),
    updatedAt: core.serialization.property("updated_at", core.serialization.string().optional()),
    userId: core.serialization.property("user_id", core.serialization.string().optional()),
    uuid: core.serialization.string().optional(),
});

export declare namespace User {
    interface Raw {
        created_at?: string | null;
        deleted_at?: string | null;
        email?: string | null;
        first_name?: string | null;
        id?: number | null;
        last_name?: string | null;
        metadata?: Record<string, unknown> | null;
        project_uuid?: string | null;
        session_count?: number | null;
        updated_at?: string | null;
        user_id?: string | null;
        uuid?: string | null;
    }
}
